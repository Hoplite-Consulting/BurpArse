name: PyTest

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  pytest:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.x", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      # Uses forked version of 'pytest-github-actions-annotate-failures' which includes the functionality of annotating warnings as well as failures.
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-cov
        python -m pip install git+https://github.com/edgarrmondragon/pytest-github-actions-annotate-failures.git@feat/annotate-warnings
        python -m pip install .
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -vv --junitxml=pytest.xml --cov-report "xml:coverage.xml" --cov=burparse tests/
    - name: Pytest coverage comment
      if: always() && github.event_name == 'pull_request'
      uses: MishaKav/pytest-coverage-comment@main
      with:
        junitxml-path: ./pytest.xml
        pytest-xml-coverage-path: ./coverage.xml
        unique-id-for-comment: ${{matrix.python-version}}
        title: ${{matrix.python-version}} Coverage Report